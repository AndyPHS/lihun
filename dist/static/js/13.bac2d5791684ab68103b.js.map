{"version":3,"sources":["webpack:///src/components/LiHun/QuestionManagement.vue","webpack:///./src/components/LiHun/QuestionManagement.vue?5657","webpack:///./src/components/LiHun/QuestionManagement.vue"],"names":["__webpack_exports__","components","HeadMenu","__WEBPACK_IMPORTED_MODULE_2__components_HeadMenu__","data","testform","title","type","re","status","placeholder","pageInfo","id","other","imgs","titleSearchMsg","list","control","user","form","file","add_answer","answerName","addQuestion_answer","addQuestion_answerName","problemType","problemRe","UserRole","chooseUserRole","min","dialogFormVisible","dialogQuestionAdd","formLabelWidth","first_page_url","last_page_url","next_page_url","path","from","per_page","last_page","userList","currentPage","pagesize","area","pageNum","fileList","[object Object]","this","handleQuestionList","QuestionArrOk","methods","Object","__WEBPACK_IMPORTED_MODULE_3__api_api_requestLogin_js__","page","then","catch","$router","replace","obj","params","keys","forEach","key","value","prototype","toString","call","item","push","encodeURIComponent","join","Array","isArray","total","console","log","label","selectOnlyQuestionList","$message","message","index","localStorage","setItem","order","sort","obj1","obj2","val1","val2","splice","size","removeItem","isIMAGE","isLt1M","error","formData","FormData","fileAll","$","files","i","length","append","child","e","$confirm","confirmButtonText","cancelButtonText","raw","reader","FileReader","readAsDataURL","onload","warning","name","res","$notify","success","imageUrl","URL","createObjectURL","err","$event","$refs","config","headers","Authorization","getItem","__WEBPACK_IMPORTED_MODULE_0_axios___default","a","post","__WEBPACK_IMPORTED_MODULE_1__common_js_api_js__","addQuestion","serialize","LiHun_QuestionManagement","render","_vm","_h","$createElement","_c","_self","_v","staticClass","attrs","autocomplete","model","callback","$$v","expression","plain","on","click","titleSearch","handleQuestionAdd","_l","_s","JSON","parse","$item","$index","src","_e","icon","circle","updateQuestion","deleteQuestion","background","layout","page-size","current-page","current-change","update:currentPage","update:current-page","visible","update:visible","label-width","$set","multiple","disabled","deleteQuestion_answer_btn","addQuestion_answer_btn","slot","addNewQuestion","delete_answer_btn","add_answer_btn","updataQuestionMsg","staticRenderFns","__vue_styles__","ssrContext","__webpack_require__","Component","normalizeComponent","QuestionManagement"],"mappings":"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","file":"static/js/13.bac2d5791684ab68103b.js","sourcesContent":["<template>\n    <div>\n        <head-menu></head-menu>\n        <div class=\"container mx-auto\">\n            <div class=\"text-lg relative my-2\">\n                <el-form>\n                    <el-form-item label=\"\">\n                      <el-input v-model=\"titleSearchMsg\" class=\"w-1/2\" autocomplete=\"off\" placeholder='请输入问题名称'></el-input>\n                    </el-form-item>\n                    <el-button type=\"primary\" plain class=\"absolute top-0 right-0 bottom-0\" @click=\"titleSearch\">搜索问题</el-button>\n                </el-form>\n            </div>\n            <div class=\"py-1 text-lg relative my-2\">问题列表<el-button type=\"primary\" plain class=\"absolute top-0 right-0 bottom-0\" @click=\"handleQuestionAdd\">新增问题</el-button></div>\n                <div class=\"text-center h-500\">\n                    <table class=\"w-full\">\n                        <thead>\n                            <tr>\n                                <td class=\"headstyle w-1/6 text-center border text-black font-bold py-2\" v-for=\"item of list\" :key=\"item.index\">{{item}}</td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr\n                                v-for=\"(item, index) in pageInfo\"\n                                :key=\"index\"\n                            >\n                                <td class=\"border text-black\">{{ item.id }}</td>\n                                <td class=\"border text-black\">{{ item.title }}</td>\n                                <td class=\"border text-black\">{{ problemType[item.type] }}</td>\n                                <td class=\"border text-black\">无备注</td>\n                                <td class=\"border text-black\" v-if=\"item.imgs !==null\">\n                                    <div  v-for=\"($item, $index) in JSON.parse(item.imgs)\" :key=\"$index\">\n                                        <img :src=\"$item\">\n                                    </div></td>\n                                <td class=\"border text-black\" v-if=\"item.imgs == null || item.imgs ==[]\">\n                                    无实例\n                                </td>\n                                <td class=\"border text-black justify-around\">\n                                    <div class=\"flex justify-around py-1 mx-auto\">\n                                        <el-button type=\"primary\" icon=\"el-icon-edit\" circle @click=\"updateQuestion(item)\"></el-button>\n                                        <el-button type=\"danger\" icon=\"el-icon-delete\" circle  @click=\"deleteQuestion(item.id)\"></el-button>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <el-pagination\n                    background\n                    class=\"my-10\"\n                    layout=\"prev, pager, next\"\n                    @current-change=\"handleQuestionList\"\n                    :page-size=\"pagesize\"\n                    :current-page.sync=\"currentPage\"\n                    :total=\"this.min.total\">\n                </el-pagination>\n            </div>\n            <!-- 新增问题弹窗 -->\n            <el-dialog title=\"新增问题\" :visible.sync=\"dialogQuestionAdd\">\n              <el-form :model=\"user\">\n                <el-form-item label=\"名称\" :label-width=\"formLabelWidth\">\n                  <el-input v-model=\"user.title\" class=\"w-1/2\" autocomplete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"类型\" :label-width=\"formLabelWidth\">\n                    <el-select v-model=\"user.type\" class=\"w-1/2\" placeholder=\"选择问题类型\">\n                      <el-option v-for=\"(item, index) in problemType\" :key=\"index\" :label=\"item\" :value=\"index\"></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"注释\" :label-width=\"formLabelWidth\">\n                  <el-input v-model=\"user.placeholder\" class=\"w-1/2\" autocomplete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"验证类型\" :label-width=\"formLabelWidth\" v-if=\"user.type==1 \">\n                    <el-select v-model=\"user.re\" placeholder=\"选择输入类型\">\n                      <el-option v-for=\"(item, index) in problemRe\" :key=\"index\" :label=\"item\" :value=\"index\"></el-option>\n                    </el-select>\n                </el-form-item>\n                <!-- <el-form-item label=\"示例图\" :label-width=\"formLabelWidth\">\n                    <el-upload\n                        id=\"attachmentInputs\"\n                        method=\"POST\"\n                        class=\"upload-demo\"\n                        accept=\"image/jpeg,image/gif,image/png\"\n                        ref=\"upload\"\n                        action=\"http://office365.aladdinlaw.com:3921/api/Questionnaire/v1/problem/add\"\n                        :on-exceed=\"exceedFile\"\n                        :before-upload=\"onBeforeUpload\"\n                        :on-success=\"handleSuccess\"\n                        :on-error=\"handleError\"\n                        name='imgs[]'\n                        list-type=\"picture-card\"\n                        :auto-upload=\"true\"\n                        multiple\n                        :limit=\"3\"\n                        :on-change=\"fileChange\"\n                        :file-list=\"fileList\"\n                      >\n                        <i class=\"el-icon-plus\"></i>\n                        <div slot=\"tip\" class=\"el-upload__tip\">请上传图片格式文件</div>\n                      </el-upload>\n                </el-form-item> -->\n                <el-form-item label=\"示例图\" :label-width=\"formLabelWidth\">\n                   <input name=\"imgs\" multiple type=\"file\" id='file'>\n                </el-form-item>\n                <div  v-if=\"user.type==6 || user.type==7 || user.type==8 || user.type==9 \" >\n                    <div  v-for=\"(item, index) in addQuestion_answer\" :key=\"index\" class=\"flex justify-between \" >\n                        <el-form-item label=\"选项名称\" :label-width=\"formLabelWidth\">\n                             <el-input v-model=\"item.label\" class=\"w-1/2\" autocomplete=\"off\" :disabled=\"true\"></el-input>\n                        </el-form-item>\n                        <div>\n                            <el-button @click=\"deleteQuestion_answer_btn(index)\">删除</el-button>\n                        </div>\n                    </div>\n                    <div   class=\"flex justify-between\">\n                        <el-form-item label=\"选项名称\" :label-width=\"formLabelWidth\">\n                             <el-input v-model=\"addQuestion_answerName\" class=\"w-1/2\" autocomplete=\"off\"></el-input>\n                        </el-form-item>\n                        <div>\n                            <el-button @click=\"addQuestion_answer_btn(index)\">添加</el-button>\n                        </div>\n                    </div>\n                </div>\n                <el-form-item label=\"是否禁用\" :label-width=\"formLabelWidth\">\n                    <el-radio-group v-model=\"user.status\">\n                        <el-radio :label=\"1\">是</el-radio>\n                        <el-radio :label=\"2\">否</el-radio>\n                    </el-radio-group>\n                </el-form-item>\n              </el-form>\n              <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"dialogQuestionAdd = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"addNewQuestion\">确 定</el-button>\n              </div>\n            </el-dialog>\n            <!-- 修改问题弹窗 -->\n            <el-dialog title=\"修改问题\" :visible.sync=\"dialogFormVisible\">\n              <el-form :model=\"user\">\n                <el-form-item label=\"名称\" :label-width=\"formLabelWidth\">\n                  <el-input v-model=\"user.title\" class=\"w-1/2\" autocomplete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"类型\" :label-width=\"formLabelWidth\">\n                    <el-select v-model=\"user.type\" class=\"w-1/2\"  placeholder=\"选择问题类型\">\n                      <el-option v-for=\"(item, index) in problemType\" :key=\"index\" :label=\"item\" :value=\"index\">{{item}}</el-option>\n                    </el-select>\n                </el-form-item>\n                 <el-form-item label=\"注释\" :label-width=\"formLabelWidth\">\n                  <el-input v-model=\"user.placeholder\" class=\"w-1/2\" autocomplete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"验证类型\" :label-width=\"formLabelWidth\" v-if=\"user.type==1 \">\n                    <el-select v-model=\"user.re\" placeholder=\"选择输入类型\">\n                      <el-option v-for=\"(item, index) in problemRe\" :key=\"index\" :label=\"item\" :value=\"index\">{{item}}</el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"示例图\" :label-width=\"formLabelWidth\">\n                   <input name=\"imgs\" multiple type=\"file\" id='fileUpdate'>\n                </el-form-item>\n                <div v-if=\"user.type==6 || user.type==7 || user.type==8 || user.type==9 \">\n                    <div  v-for=\"(item, index) in add_answer\" :key=\"index\"  class=\"flex justify-between\" >\n                        <el-form-item label=\"选项名称\" :label-width=\"formLabelWidth\">\n                             <el-input v-model=\"item.label\" class=\"w-1/2\" autocomplete=\"off\" :disabled=\"true\"></el-input>\n                        </el-form-item>\n                        <div>\n                            <!-- <el-button @click=\"add_answer_btn\">添加</el-button> -->\n                            <el-button @click=\"delete_answer_btn(item,index)\">删除</el-button>\n                        </div>\n                    </div>\n                    <div   class=\"flex justify-between\">\n                        <el-form-item label=\"选项名称\" :label-width=\"formLabelWidth\">\n                             <el-input v-model=\"answerName\" class=\"w-1/2\" autocomplete=\"off\"></el-input>\n                        </el-form-item>\n                        <div>\n                            <el-button @click=\"add_answer_btn\">添加</el-button>\n                        </div>\n                    </div>\n                </div>\n\n                <el-form-item label=\"是否禁用\" :label-width=\"formLabelWidth\">\n                    <el-radio-group v-model=\"user.status\">\n                        <el-radio :label=\"1\">是</el-radio>\n                        <el-radio :label=\"2\">否</el-radio>\n                    </el-radio-group>\n                </el-form-item>\n              </el-form>\n              <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"updataQuestionMsg\">确 定</el-button>\n              </div>\n            </el-dialog>\n        </div>\n\n</template>\n<!-- <script src=\"https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js\"></script> -->\n<script>\n    import axios from 'axios'\n    import {apiUrl} from '@/common/js/api.js'\n    import HeadMenu from '@/components/HeadMenu'    // 添加公共头部\n    import {addQuestion} from '@/api/api/requestLogin.js'   // 新增问题\n    import {addAnswer} from '@/api/api/requestLogin.js'    // 添加选项\n    import {deleteAnswer} from '@/api/api/requestLogin.js'    // 删除选项\n    import {selectQuestion} from '@/api/api/requestLogin.js'  // 获取用户列表\n    import {selectQuestionList} from '@/api/api/requestLogin.js'  // 根据标题条件获取用户列表\n    import {updateQuestion} from '@/api/api/requestLogin.js'   // 修改问题\n    import {deleteQuestion} from '@/api/api/requestLogin.js'   // 删除问题\n    import {selectOnlyQuestion} from '@/api/api/requestLogin.js'   // 查询单独问题\n    import {QuestionArr} from '@/api/api/requestLogin.js'    // 问题数组\n    import {demoAddImg} from '@/api/api/requestLogin.js'    // 添加示例图\n\n    export default {\n        components:{\n            HeadMenu,\n        },\n        data () {\n            return {\n                testform:{\n                    title: '',\n                    type: null,\n                    re: null,\n                    status: null,    // 是否禁用\n                    placeholder: '' // 注释\n                },\n                pageInfo:[\n                 {\n                    id: '',\n                    title: '',\n                    type: '',\n                    other: '',\n                    imgs: []\n                 }\n                ],\n                titleSearchMsg: '',\n                list: {\n                    id: '问题ID',\n                    title: '问题名称',\n                    type: '问题类型',\n                    other: '问题备注',\n                    imgs: '问题实例',\n                    control: '操作'\n                },\n                user:{\n                    title: '',\n                    type: null,\n                    re: null,\n                    imgs: null,\n                    status: null,    // 是否禁用\n                    placeholder: '' // 注释\n                },\n                form:{\n                    file:'',\n                },\n                add_answer: [],   // 修改页面添加选项\n                answerName: '',   // 修改页面点击添加选项绑定的值\n                addQuestion_answer: [], // 新增页面选项列表\n                addQuestion_answerName: '',   // 新增页面点击添加选项绑定的值\n                // fileList: [],   // 实例图片\n                problemType: {},\n                problemRe: {},\n                UserRole: [],\n                chooseUserRole: [],\n                min: '',\n                dialogFormVisible: false,\n                dialogQuestionAdd: false,\n                formLabelWidth: '80px',\n                 // 分页\n                first_page_url: '',\n                last_page_url: '',\n                next_page_url: '',\n                path: '',\n                from: 1,\n                per_page: null,\n                last_page: null,\n                userList: [],\n                currentPage:1, //初始页\n                pagesize:20,    //    每页的数据\n                area: '', // 擅长领域\n                pageNum: 1, // 第几页\n                fileList: [] // 待上传的示例图\n            }\n        },\n        mounted () {\n          this.handleQuestionList()   //获取问题列表\n          this.QuestionArrOk() // 获取问题数组\n        },\n        methods:{\n            handleQuestionList () { // 获取问题\n                selectQuestion({page:this.currentPage}).then((data)=>{\n                    this.pageInfo = data.data.data.data\n                    this.min = data.data.data\n                    // this.fileList = this.pageInfo.imgs\n                }).catch((data)=>{\n                    this.$router.replace(\"/\");\n                })\n            },\n            encodeSearchParams(obj) {   // 通过条件查找问题\n                const params = [];\n                Object.keys(obj).forEach((key) => {\n                  let value = obj[key];\n                  // 如果值为undefined置空\n                  if (typeof value === 'undefined') {\n                    value = '';\n                  }else if (Object.prototype.toString.call(obj[key]) === '[object Object]') {//类型为对象的时候\n                    Object.keys(obj[key]).forEach(item => {\n                      params.push([item, encodeURIComponent(obj[key][item])].join('='));\n                    })\n                  }else if(Array.isArray(obj[key])){\n                    params.push(key+'='+ '['+obj[key]+']');\n                  }else {\n                    params.push([key, encodeURIComponent(value)].join('='));\n                  }\n                });\n                return params.join('&');\n              },\n              titleSearch () {  // 点击查找开始查找问题\n                selectQuestionList(\"title=\"+this.titleSearchMsg).then((data)=>{\n                    this.pageInfo = data.data.data.data\n                    this.min = data.data.data\n                    this.total = data.data.total\n                }).catch((data)=>{\n                    console.log(data)\n                })\n              },\n            QuestionArrOk () {\n                QuestionArr().then((data)=>{\n                    this.problemType = data.data.data.problemType\n                    this.problemRe = data.data.data.problemRe\n                })\n            },\n            add_answer_btn () {  // 修改页面点击添加选项\n                addAnswer({\n                    status: 1,\n                    label: this.answerName\n                }).then((data)=>{\n                    this.selectOnlyQuestionList()\n                    this.$message({\n                        type: 'success',\n                        message: '成功添加选项!'\n                      });\n                    this.answerName = ''\n                })\n            },\n            delete_answer_btn (item,index) { // 修改页面点击删除选项\n                localStorage.setItem('paid',item.id)\n                deleteAnswer().then((data)=>{\n                    this.$message({\n                        type: 'success',\n                        message: '删除选项成功!'\n                      });\n                    this.selectOnlyQuestionList()\n                }).catch((data)=>{\n\n                })\n            },\n            addQuestion_answer_btn (index) {  // 新增问题页面点击添加选项\n                this.addQuestion_answer.push({\n                    status: 1,\n                    label:this.addQuestion_answerName,\n                    order: index\n                })\n                var arr = this.addQuestion_answer\n                var compar = function(obj1, obj2){\n                  var val1 = obj1.order;\n                  var val2 = obj2.order;\n                  if(val1<val2){\n                    return -1\n                  }else if(val1>val2){\n                    return 1\n                  }else{\n                    return 0\n                  }\n                }\n                arr.sort(compar)\n                this.addQuestion_answerName = ''\n            },\n            deleteQuestion_answer_btn (index) { // 新增问题页面点击删除选项\n                this.addQuestion_answer.splice(index,1)\n            },\n            handleSizeChange (size) {   // 点击分页\n                this.pagesize = size;\n            },\n            handleCurrentChange (currentPage) {    //点击哪一页\n                this.currentPage = currentPage;\n            },\n\n            handleQuestionAdd () {    // 点击新增问题\n                localStorage.removeItem('pid');\n                this.user.title = '';\n                this.user.type = '';\n                this.user.placeholder = '';\n                this.user.status = '';\n                this.dialogQuestionAdd = true\n            },\n\n            onBeforeUpload(file) {\n              const isIMAGE = file.type === 'image/jpeg'||'image/gif'||'image/png';\n              const isLt1M = file.size / 1024 / 1024 < 1;\n\n              if (!isIMAGE) {\n                this.$message.error('上传文件只能是图片格式!');\n              }\n              if (!isLt1M) {\n                this.$message.error('上传文件大小不能超过 1MB!');\n              }\n              return isIMAGE && isLt1M;\n            },\n            addNewQuestion () {   // 新增问题\n                const formData = new FormData();\n                let fileAll = $(\"#file\")[0].files;\n                for(var i =0;i<fileAll.length;i++){\n                  console.log(fileAll[i])\n                  formData.append('imgs['+i+']', fileAll[i])\n                }\n                formData.append('title', this.user.title);\n                formData.append('type', this.user.type);\n                formData.append('placeholder', this.user.placeholder);\n                formData.append('status', this.user.status);\n                if(this.user.type==1){\n                  formData.append('re', this.user.re);\n                }\n                addQuestion(formData).then((data)=>{\n                  this.user.title = '';\n                  this.user.type = '';\n                  this.user.re = '';\n                  this.user.placeholder = '';\n                  this.user.status = '';\n                  this.handleQuestionList()\n                  localStorage.setItem('pid',data.data.data)\n                  this.$message({\n                      type: 'success',\n                      message: '成功添加问题!'\n                  });\n                  localStorage.removeItem('pid');\n                  this.dialogQuestionAdd = false\n                }).catch((data)=>{\n\n                })\n            },\n\n            updateQuestion (item) {    // 点击修改问题\n                localStorage.setItem('pid',item.id)\n                this.user.title = item.title;\n                this.user.type = item.type;\n                this.user.re = item.re;\n                this.user.placeholder = item.placeholder\n                this.user.status = item.status;\n                this.dialogFormVisible = true\n                if(this.user.type==6 || this.user.type==7 || this.user.type==8 || this.user.type==9 ){\n                    this.selectOnlyQuestionList()\n                }\n            },\n            selectOnlyQuestionList () {  // 修改页面查询当前问题下的选项列表\n                selectOnlyQuestion().then((data)=>{\n                     this.add_answer = data.data.child\n                }).catch((data)=>{\n                })\n            },\n            handleCheckedCitiesChange (value) {\n                this.chooseUserRole = value\n            },\n            updataQuestionMsg () {   // 确定修改用户信息\n                const formData = new FormData();\n                let fileAll = $(\"#fileUpdate\")[0].files;\n                for(var i =0;i<fileAll.length;i++){\n                  formData.append('imgs['+i+']', fileAll[i])\n                }\n                formData.append('title', this.user.title);\n                formData.append('type', this.user.type);\n                formData.append('placeholder', this.user.placeholder);\n                formData.append('status', this.user.status);\n                if(this.user.type==1){\n                   formData.append('re', this.user.re);\n                    updateQuestion(formData).then((data)=>{\n                        this.user.title = '';\n                        this.user.type = null;\n                        this.user.re = null;\n                        this.user.placeholder = '';\n                        this.user.status = null;\n                        localStorage.removeItem('pid');\n                        this.handleQuestionList()\n                        this.dialogFormVisible = false\n                    })\n                }else if(this.user.type==6 || this.user.type==7 || this.user.type==8 || this.user.type==9 ){\n                    updateQuestion(formData).then((data)=>{\n                        this.user.title = '';\n                        this.user.type = null;\n                        this.user.status = null;\n                        this.user.placeholder = '';\n                        localStorage.removeItem('pid');\n                        this.handleQuestionList()\n                        this.dialogFormVisible = false\n                    })\n                }else{\n                  formData.append('re', this.user.re);\n                   updateQuestion(formData).then((data)=>{\n                        this.user.title = '';\n                        this.user.type = null;\n                        this.user.placeholder = '';\n                        this.user.status = null;\n                        this.user.re = null;\n                        localStorage.removeItem('pid');\n                        this.handleQuestionList()\n                        this.dialogFormVisible = false\n                    })\n                }\n\n            },\n            deleteQuestion (e) {   // 删除用户\n                this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n                }).then(() => {\n                    deleteQuestion(e).then((data)=>{\n                        this.handleQuestionList()\n                    })\n                  this.$message({\n                    type: 'success',\n                    message: '删除成功!'\n                  });\n                }).catch(() => {\n                  this.$message({\n                    type: 'info',\n                    message: '已取消删除'\n                  });\n                });\n\n            },\n            handleRemove(file, fileList) {\n              // console.log(file, fileList);\n            },\n             // 文件状态改变时的钩子\n            fileChange(file, fileList) {\n                console.log(file)\n                console.log(fileList)\n              this.form.file = file.raw\n              this.fileList = fileList\n              const isIMAGE = (file.raw.type === 'image/jpeg' || file.raw.type === 'image/png'|| file.raw.type === 'image/gif');\n                const isLt1M = file.size / 1024 / 1024 < 1;\n\n                if (!isIMAGE) {\n                  this.$message.error('上传文件只能是图片格式!');\n                  return false;\n                }\n                if (!isLt1M) {\n                  this.$message.error('上传文件大小不能超过 1MB!');\n                  return false;\n                }\n                var reader = new FileReader();\n                reader.readAsDataURL(file.raw);\n                reader.onload = function(e){\n                    // console.log(this.result)//图片的base64数据\n                }\n                // this.$refs.upload.submit();\n\n            },\n             // 文件超出时的钩子\n            exceedFile(files, fileList) {\n                this.$message.warning(`当前限制选择 3 个文件，本次选择了 ${files.length} 个文件，共选择了 ${files.length + fileList.length} 个文件`);\n            },\n            beforeRemove(file, fileList) {\n                return this.$confirm(`确定移除 ${ file.name }？`);\n            },\n            handleSuccess(res, file, fileList) {\n\n              console.log(res)\n              console.log(file)\n              console.log(fileList)\n              this.$notify.success({\n                title: '成功',\n                message: `文件上传成功`\n              });\n              this.imageUrl = URL.createObjectURL(file.raw);\n            },\n            // 文件上传失败时的钩子\n            handleError(err, file, fileList) {\n              this.$notify.error({\n                title: '错误',\n                message: `文件上传失败`\n              });\n            },\n            changeInfo($event) {\n                var formData = new FormData(this.$refs.form);         //获取表单数据\n                let config = {\n                     headers: {\n                       \"Authorization\":'bearer ' + localStorage.getItem('token')\n                     }\n                 }\n\n\n                 axios.post(apiUrl.addQuestion, formData, config)         \n\n                .then(res => {\n                $('#form1').serialize()\n                console.log(res)\n                return false;\n\n                    if(res.data.error_code==0){\n\n                        this.tabshow=false\n\n                            this.$emit('closeall',this.tabshow);\n\n                      }\n\n                })\n            }\n        }\n    }\n</script>\n\n<style scoped>\n/*.searchBox{ margin-right: 150px;}*/\n.h-500{height: 500px;overflow: scroll;}\n.el-form-item{margin-bottom:0.25rem;}\n\n/*测试表单提交*/\n.content{\n        width:800px;\n        margin:50px auto;\n    }\n    .title{\n        font-size:18px;\n        font-weight:bold;\n        padding-left:340px;\n        margin-bottom:30px;\n    }\n    input{\n        border:1px solid #a9a9a9;\n        height:34px;\n        line-height:34px;\n        width:550px;\n        margin-bottom:20px;\n        padding-left:5px;\n    }\n    label{\n        width:120px;\n        text-align:right;\n        display:inline-block;\n    }\n    #registerBtn{\n        background:#3498db;\n        color:#fff;\n        font-size:14px;\n        text-align:center;\n        width:100px;\n        line-height:34px;\n        border:none 0;\n        cursor:pointer;\n        margin:20px 20px 0 0;\n        margin-left:120px;\n    }\n    label span{\n        color:red;\n    }\n    #errContent{\n        padding:20px 0 0 30px;\n        text-align:center;\n    }\n    #file{\n      width: 220px;\n      height: 40px;\n      padding-left: 0;\n    }\n    #fileUpdate{\n      width: 220px;\n      height: 40px;\n      padding-left: 0;\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/LiHun/QuestionManagement.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('head-menu'),_vm._v(\" \"),_c('div',{staticClass:\"container mx-auto\"},[_c('div',{staticClass:\"text-lg relative my-2\"},[_c('el-form',[_c('el-form-item',{attrs:{\"label\":\"\"}},[_c('el-input',{staticClass:\"w-1/2\",attrs:{\"autocomplete\":\"off\",\"placeholder\":\"请输入问题名称\"},model:{value:(_vm.titleSearchMsg),callback:function ($$v) {_vm.titleSearchMsg=$$v},expression:\"titleSearchMsg\"}})],1),_vm._v(\" \"),_c('el-button',{staticClass:\"absolute top-0 right-0 bottom-0\",attrs:{\"type\":\"primary\",\"plain\":\"\"},on:{\"click\":_vm.titleSearch}},[_vm._v(\"搜索问题\")])],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"py-1 text-lg relative my-2\"},[_vm._v(\"问题列表\"),_c('el-button',{staticClass:\"absolute top-0 right-0 bottom-0\",attrs:{\"type\":\"primary\",\"plain\":\"\"},on:{\"click\":_vm.handleQuestionAdd}},[_vm._v(\"新增问题\")])],1),_vm._v(\" \"),_c('div',{staticClass:\"text-center h-500\"},[_c('table',{staticClass:\"w-full\"},[_c('thead',[_c('tr',_vm._l((_vm.list),function(item){return _c('td',{key:item.index,staticClass:\"headstyle w-1/6 text-center border text-black font-bold py-2\"},[_vm._v(_vm._s(item))])}),0)]),_vm._v(\" \"),_c('tbody',_vm._l((_vm.pageInfo),function(item,index){return _c('tr',{key:index},[_c('td',{staticClass:\"border text-black\"},[_vm._v(_vm._s(item.id))]),_vm._v(\" \"),_c('td',{staticClass:\"border text-black\"},[_vm._v(_vm._s(item.title))]),_vm._v(\" \"),_c('td',{staticClass:\"border text-black\"},[_vm._v(_vm._s(_vm.problemType[item.type]))]),_vm._v(\" \"),_c('td',{staticClass:\"border text-black\"},[_vm._v(\"无备注\")]),_vm._v(\" \"),(item.imgs !==null)?_c('td',{staticClass:\"border text-black\"},_vm._l((JSON.parse(item.imgs)),function($item,$index){return _c('div',{key:$index},[_c('img',{attrs:{\"src\":$item}})])}),0):_vm._e(),_vm._v(\" \"),(item.imgs == null || item.imgs ==[])?_c('td',{staticClass:\"border text-black\"},[_vm._v(\"\\n                                无实例\\n                            \")]):_vm._e(),_vm._v(\" \"),_c('td',{staticClass:\"border text-black justify-around\"},[_c('div',{staticClass:\"flex justify-around py-1 mx-auto\"},[_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-edit\",\"circle\":\"\"},on:{\"click\":function($event){return _vm.updateQuestion(item)}}}),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"danger\",\"icon\":\"el-icon-delete\",\"circle\":\"\"},on:{\"click\":function($event){return _vm.deleteQuestion(item.id)}}})],1)])])}),0)])]),_vm._v(\" \"),_c('el-pagination',{staticClass:\"my-10\",attrs:{\"background\":\"\",\"layout\":\"prev, pager, next\",\"page-size\":_vm.pagesize,\"current-page\":_vm.currentPage,\"total\":this.min.total},on:{\"current-change\":_vm.handleQuestionList,\"update:currentPage\":function($event){_vm.currentPage=$event},\"update:current-page\":function($event){_vm.currentPage=$event}}})],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"新增问题\",\"visible\":_vm.dialogQuestionAdd},on:{\"update:visible\":function($event){_vm.dialogQuestionAdd=$event}}},[_c('el-form',{attrs:{\"model\":_vm.user}},[_c('el-form-item',{attrs:{\"label\":\"名称\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{staticClass:\"w-1/2\",attrs:{\"autocomplete\":\"off\"},model:{value:(_vm.user.title),callback:function ($$v) {_vm.$set(_vm.user, \"title\", $$v)},expression:\"user.title\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"类型\",\"label-width\":_vm.formLabelWidth}},[_c('el-select',{staticClass:\"w-1/2\",attrs:{\"placeholder\":\"选择问题类型\"},model:{value:(_vm.user.type),callback:function ($$v) {_vm.$set(_vm.user, \"type\", $$v)},expression:\"user.type\"}},_vm._l((_vm.problemType),function(item,index){return _c('el-option',{key:index,attrs:{\"label\":item,\"value\":index}})}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"注释\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{staticClass:\"w-1/2\",attrs:{\"autocomplete\":\"off\"},model:{value:(_vm.user.placeholder),callback:function ($$v) {_vm.$set(_vm.user, \"placeholder\", $$v)},expression:\"user.placeholder\"}})],1),_vm._v(\" \"),(_vm.user.type==1 )?_c('el-form-item',{attrs:{\"label\":\"验证类型\",\"label-width\":_vm.formLabelWidth}},[_c('el-select',{attrs:{\"placeholder\":\"选择输入类型\"},model:{value:(_vm.user.re),callback:function ($$v) {_vm.$set(_vm.user, \"re\", $$v)},expression:\"user.re\"}},_vm._l((_vm.problemRe),function(item,index){return _c('el-option',{key:index,attrs:{\"label\":item,\"value\":index}})}),1)],1):_vm._e(),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"示例图\",\"label-width\":_vm.formLabelWidth}},[_c('input',{attrs:{\"name\":\"imgs\",\"multiple\":\"\",\"type\":\"file\",\"id\":\"file\"}})]),_vm._v(\" \"),(_vm.user.type==6 || _vm.user.type==7 || _vm.user.type==8 || _vm.user.type==9 )?_c('div',[_vm._l((_vm.addQuestion_answer),function(item,index){return _c('div',{key:index,staticClass:\"flex justify-between \"},[_c('el-form-item',{attrs:{\"label\":\"选项名称\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{staticClass:\"w-1/2\",attrs:{\"autocomplete\":\"off\",\"disabled\":true},model:{value:(item.label),callback:function ($$v) {_vm.$set(item, \"label\", $$v)},expression:\"item.label\"}})],1),_vm._v(\" \"),_c('div',[_c('el-button',{on:{\"click\":function($event){return _vm.deleteQuestion_answer_btn(index)}}},[_vm._v(\"删除\")])],1)],1)}),_vm._v(\" \"),_c('div',{staticClass:\"flex justify-between\"},[_c('el-form-item',{attrs:{\"label\":\"选项名称\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{staticClass:\"w-1/2\",attrs:{\"autocomplete\":\"off\"},model:{value:(_vm.addQuestion_answerName),callback:function ($$v) {_vm.addQuestion_answerName=$$v},expression:\"addQuestion_answerName\"}})],1),_vm._v(\" \"),_c('div',[_c('el-button',{on:{\"click\":function($event){return _vm.addQuestion_answer_btn(_vm.index)}}},[_vm._v(\"添加\")])],1)],1)],2):_vm._e(),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"是否禁用\",\"label-width\":_vm.formLabelWidth}},[_c('el-radio-group',{model:{value:(_vm.user.status),callback:function ($$v) {_vm.$set(_vm.user, \"status\", $$v)},expression:\"user.status\"}},[_c('el-radio',{attrs:{\"label\":1}},[_vm._v(\"是\")]),_vm._v(\" \"),_c('el-radio',{attrs:{\"label\":2}},[_vm._v(\"否\")])],1)],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.dialogQuestionAdd = false}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addNewQuestion}},[_vm._v(\"确 定\")])],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"修改问题\",\"visible\":_vm.dialogFormVisible},on:{\"update:visible\":function($event){_vm.dialogFormVisible=$event}}},[_c('el-form',{attrs:{\"model\":_vm.user}},[_c('el-form-item',{attrs:{\"label\":\"名称\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{staticClass:\"w-1/2\",attrs:{\"autocomplete\":\"off\"},model:{value:(_vm.user.title),callback:function ($$v) {_vm.$set(_vm.user, \"title\", $$v)},expression:\"user.title\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"类型\",\"label-width\":_vm.formLabelWidth}},[_c('el-select',{staticClass:\"w-1/2\",attrs:{\"placeholder\":\"选择问题类型\"},model:{value:(_vm.user.type),callback:function ($$v) {_vm.$set(_vm.user, \"type\", $$v)},expression:\"user.type\"}},_vm._l((_vm.problemType),function(item,index){return _c('el-option',{key:index,attrs:{\"label\":item,\"value\":index}},[_vm._v(_vm._s(item))])}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"注释\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{staticClass:\"w-1/2\",attrs:{\"autocomplete\":\"off\"},model:{value:(_vm.user.placeholder),callback:function ($$v) {_vm.$set(_vm.user, \"placeholder\", $$v)},expression:\"user.placeholder\"}})],1),_vm._v(\" \"),(_vm.user.type==1 )?_c('el-form-item',{attrs:{\"label\":\"验证类型\",\"label-width\":_vm.formLabelWidth}},[_c('el-select',{attrs:{\"placeholder\":\"选择输入类型\"},model:{value:(_vm.user.re),callback:function ($$v) {_vm.$set(_vm.user, \"re\", $$v)},expression:\"user.re\"}},_vm._l((_vm.problemRe),function(item,index){return _c('el-option',{key:index,attrs:{\"label\":item,\"value\":index}},[_vm._v(_vm._s(item))])}),1)],1):_vm._e(),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"示例图\",\"label-width\":_vm.formLabelWidth}},[_c('input',{attrs:{\"name\":\"imgs\",\"multiple\":\"\",\"type\":\"file\",\"id\":\"fileUpdate\"}})]),_vm._v(\" \"),(_vm.user.type==6 || _vm.user.type==7 || _vm.user.type==8 || _vm.user.type==9 )?_c('div',[_vm._l((_vm.add_answer),function(item,index){return _c('div',{key:index,staticClass:\"flex justify-between\"},[_c('el-form-item',{attrs:{\"label\":\"选项名称\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{staticClass:\"w-1/2\",attrs:{\"autocomplete\":\"off\",\"disabled\":true},model:{value:(item.label),callback:function ($$v) {_vm.$set(item, \"label\", $$v)},expression:\"item.label\"}})],1),_vm._v(\" \"),_c('div',[_c('el-button',{on:{\"click\":function($event){return _vm.delete_answer_btn(item,index)}}},[_vm._v(\"删除\")])],1)],1)}),_vm._v(\" \"),_c('div',{staticClass:\"flex justify-between\"},[_c('el-form-item',{attrs:{\"label\":\"选项名称\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{staticClass:\"w-1/2\",attrs:{\"autocomplete\":\"off\"},model:{value:(_vm.answerName),callback:function ($$v) {_vm.answerName=$$v},expression:\"answerName\"}})],1),_vm._v(\" \"),_c('div',[_c('el-button',{on:{\"click\":_vm.add_answer_btn}},[_vm._v(\"添加\")])],1)],1)],2):_vm._e(),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"是否禁用\",\"label-width\":_vm.formLabelWidth}},[_c('el-radio-group',{model:{value:(_vm.user.status),callback:function ($$v) {_vm.$set(_vm.user, \"status\", $$v)},expression:\"user.status\"}},[_c('el-radio',{attrs:{\"label\":1}},[_vm._v(\"是\")]),_vm._v(\" \"),_c('el-radio',{attrs:{\"label\":2}},[_vm._v(\"否\")])],1)],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.dialogFormVisible = false}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.updataQuestionMsg}},[_vm._v(\"确 定\")])],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-05d590e4\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/LiHun/QuestionManagement.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-05d590e4\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./QuestionManagement.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./QuestionManagement.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./QuestionManagement.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-05d590e4\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./QuestionManagement.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-05d590e4\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/LiHun/QuestionManagement.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}